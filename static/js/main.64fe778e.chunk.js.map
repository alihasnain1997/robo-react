{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","bind","e","this","setState","target","value","fetch","then","res","json","users","console","log","catch","err","filteredArray","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAIaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,iBAAiBC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAC7B,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCHbC,G,MAAW,SAACR,GACrB,OAAQ,qBAAKC,UAAU,YAAf,SAEAD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCJtBM,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACrC,OAAO,uBACHZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCoCHG,E,kDAvCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IAEf,EAAKL,aAAe,EAAKA,aAAaM,KAAlB,gBAPR,E,gDASd,SAAaC,GACXC,KAAKC,SAAS,CAAEJ,YAAaE,EAAEG,OAAOC,U,+BAExC,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJC,QAAQC,IAAI,WAAYF,GACxB,EAAKP,SAAS,CAAEb,SAAUoB,OACzBG,OAAM,SAAAC,GACPH,QAAQC,IAAI,QAASE,Q,oBAG3B,WAAU,IAAD,EAC2BZ,KAAKJ,MAA/BR,EADD,EACCA,SAAUS,EADX,EACWA,YACZgB,EAAgBzB,EAAS0B,QAAO,SAAA/B,GAAO,OAC3CA,EAAQE,KAAK8B,cAAcC,SAASnB,EAAYkB,kBAClD,OACE,sBAAKnC,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAcQ,KAAKR,eAErB,cAAC,EAAD,CAAUJ,SAAUyB,W,GAlCVI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.64fe778e.chunk.js","sourcesContent":["import React from 'react'\n\nimport './card.style.css'\n\nexport const Card = (props) => (\n    <div className=\"card-container\">\n        <img alt=\"robot-monsters\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\n        <h2>{props.monster.name}</h2>\n        <p>{props.monster.email}</p>\n    </div>\n)","import React from 'react'\nimport { Card } from '../card/card.component'\n\nimport './card-list.style.css'\n\nexport const CardList = (props) => {\n    return (<div className=\"card-list\">\n        {\n            props.monsters.map(monster =>\n                <Card key={monster.id} monster={monster} />)\n        }\n    </div>)\n}","import React from 'react'\n\nimport './search-box.style.css'\n\n\nexport const SearchBox = ({ placeholder, handleChange }) => {\n    return <input\n        className='search'\n        type=\"search\"\n        placeholder={placeholder}\n        onChange={handleChange} />\n}\n","import { Component } from 'react'\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component'\nimport { SearchBox } from './components/search-box/search-box.component'\n\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n  handleChange(e) {\n    this.setState({ searchField: e.target.value })\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(res => res.json())\n      .then(users => {\n        console.log(\"response\", users)\n        this.setState({ monsters: users })\n      }).catch(err => {\n        console.log(\"error\", err)\n      })\n  }\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredArray = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchBox\n          placeholder='Search Monsters'\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredArray} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}